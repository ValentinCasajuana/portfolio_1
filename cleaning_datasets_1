import numpy as np
import pandas as pd
my_dict = {"name" : ["Joe","Bob","Frans"],
"age" : np.array([10,15,20]),
"weight" : (75,123,239),
"height" : [4.5,5,6.1],
"siblings" : 1,
"gender" : "M"}
df = pd.DataFrame(my_dict)

## filtrar columnas name y gender y las filas 0 y 2
df.loc[:,['name','gender']].iloc[[0,2],:]

## filtra con alguna condiciÃ³n
df.loc[df.age>18,:]

##Cleaning datasets

#DF1 For Boston data:
#1. show the names of the variables and a brief summary of them
#2. extract the first 10 rows
#3. extract the rows 4th and 5th with the last 4 variables
#4. extract the rows with AGE bigger than 95. How many rows are they?
#5. extract the rows 2 and 3 for the variables DIS, RAD and TAX
#6. erase the columns B and LSTAT
#7. replace the maximum value on DIS by 1

#DF2
url= 'https://raw.githubusercontent.com/justmarkham/DAT8/master/data/chipotle.tsv'
chipo = pd.read_csv(url, sep = '\t')

#1. have a look to the first 10 entries. What are the data about?
chipo.head(n=10)

#2. How many observations do we have in the data?

chipo.shape

#3. What is the number of columns in the dataset? Print the name of all columns
chipo.columns

#4. How is the dataset indexed?

chipo.index

#5. Which was the most ordered item in times?
chipo.item_name.value_counts()

#6. How many items of this product were ordered?
chipo.item_name.value_counts().idxmax()
#7. What was the most ordered item in the choice_description column?
chipo.choice_description.value_counts().head(4)
#8. How much was the revenue for the period in the dataset?

chipo['item_price'].str.replace('$','').astype(float).sum()
chipo.loc[:,"item_price"].str.replace("$","").astype(float).sum()
chipo.item_price.apply(lambda x: float(x[1:])).sum()


#9. How many items were ordered in total?
chipo.quantity.sum()

#10. How many orders were made in the period?

chipo.order_id.tail()
chipo.order_id.max()

#mejores
len(set(chipo.order_id))
chipo.drop_duplicates(subset = 'order_id').shape
chipo.order_id.value_counts()
#11. What is the average amount per order? (not yet)


#12. How many different items are sold?
chipo.item_name.nunique()
chipo.item_name.value_counts().shape
chipo.drop_duplicates(subset = 'item_name').shape


#Aplicar una funcion elemento a elemento
def sumar3(x):
    return x + 3

chipo.loc[:,['order_id','quantity','item_price']].applymap(sumar3)

#sorting

chipo.sort_values(by=['item_price'],ascending=0).head(10)

#PD 3


#1. How many items are more expensive than 10$?

chipo.loc[chipo.item_price > 10 , :]

#2. What is the price of each item when only 1 item is bought?

chipo.loc[chipo.quantity == 1, :].loc[:,['item_price','item_name']].drop_duplicates(subset = 'item_name')

#3. Sort by the name of the item

chipo.loc[chipo.quantity == 1, :].loc[:,['item_price','item_name']].drop_duplicates(subset = 'item_name').sort_values(by = 'item_name')
#4. What was the quantity of the most expensive item ordered?

chipo.sort_values(by='item_price', ascending=0).head(1)
chipo.loc[:,"item_price"].str.replace("$","").astype(float).sum()

#5. How many times were a Veggie Salad Bowl ordered?
chipo.loc[chipo.item_name=="Veggie Salad Bowl",:].shape

#6. How many times people ordered more than one Canned Soda?
chipo.loc[chipo.item_name=="Canned Soda",:].loc[chipo.quantity>1,:].shape
